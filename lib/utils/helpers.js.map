{"version":3,"file":"helpers.js","sources":["../../src/utils/helpers.ts"],"sourcesContent":["import { Text } from 'pixi.js';\nimport { LayoutSystem } from '../Layout';\nimport { PixiTextStyle } from './text';\nimport { FlexNumber, Styles } from './types';\n\nexport function rgba2Hex([r, g, b]: number[]): number\n{\n    return parseInt(`0x${getHex(r)}${getHex(g)}${getHex(b)}`, 16);\n}\n\nexport function getHex(n: number)\n{\n    const hex = n.toString(16);\n\n    return hex.length === 1 ? `0${hex}` : hex;\n}\n\nexport function isDefined(value: any): boolean\n{\n    return value !== undefined && value !== null;\n}\n\nexport function getNumber(value: FlexNumber, maxPercentValue?: number): number\n{\n    if (value === undefined)\n    {\n        return undefined;\n    }\n\n    if (typeof value === 'number')\n    {\n        return value;\n    }\n\n    if (typeof value === 'string')\n    {\n        if (value.endsWith('px'))\n        {\n            return Math.floor(parseInt(value.slice(0, -2), 10));\n        }\n        else if (value.endsWith('%'))\n        {\n            const val = parseInt(value.slice(0, -1), 10);\n\n            return Math.floor(\n                maxPercentValue ? (maxPercentValue / 100) * val : val\n            );\n        }\n\n        return Math.floor(parseInt(value, 10));\n    }\n\n    return 0;\n}\n\nexport function stylesToPixiTextStyles(styles: Styles): PixiTextStyle\n{\n    const resultStyles: PixiTextStyle = {\n        align: styles?.textAlign,\n        breakWords: styles?.breakWords,\n        dropShadow: styles?.dropShadow,\n        fill: styles?.fill ?? styles?.color,\n\n        fontFamily: styles?.fontFamily,\n        fontSize: styles?.fontSize,\n        fontStyle: styles?.fontStyle,\n        fontVariant: styles?.fontVariant,\n        fontWeight: styles?.fontWeight,\n        leading: styles?.leading,\n        textBaseline: styles?.textBaseline,\n        letterSpacing: styles?.letterSpacing,\n        lineHeight: styles?.lineHeight,\n        trim: styles?.trim,\n        // padding: styles?.padding ?? 0,\n        stroke: styles?.stroke,\n        whiteSpace: styles?.whiteSpace,\n        wordWrap: styles?.wordWrap,\n        wordWrapWidth: styles?.wordWrapWidth ?? 100,\n    };\n\n    for (const key in resultStyles)\n    {\n        if (resultStyles[key as keyof Partial<PixiTextStyle>] === undefined)\n        {\n            delete resultStyles[key as keyof Partial<PixiTextStyle>];\n        }\n    }\n\n    return resultStyles;\n}\n\n/**\n * Detect if layout is just a wrapper for a text element.\n * @param {LayoutSystem} layout - Layout to check.\n */\nexport function isItJustAText(layout: LayoutSystem): boolean\n{\n    const hasOnly1Child = layout.content.children.size === 1;\n\n    if (hasOnly1Child)\n    {\n        const firstChild = layout.content.children.entries().next().value[1];\n\n        return firstChild instanceof Text;\n    }\n\n    return false;\n}\n"],"names":["Text"],"mappings":";;;;AAsBgB,SAAA,SAAA,CAAU,OAAmB,eAC7C,EAAA;AACI,EAAA,IAAI,UAAU,KACd,CAAA,EAAA;AACI,IAAO,OAAA,KAAA,CAAA,CAAA;AAAA,GACX;AAEA,EAAI,IAAA,OAAO,UAAU,QACrB,EAAA;AACI,IAAO,OAAA,KAAA,CAAA;AAAA,GACX;AAEA,EAAI,IAAA,OAAO,UAAU,QACrB,EAAA;AACI,IAAI,IAAA,KAAA,CAAM,QAAS,CAAA,IAAI,CACvB,EAAA;AACI,MAAO,OAAA,IAAA,CAAK,MAAM,QAAS,CAAA,KAAA,CAAM,MAAM,CAAG,EAAA,CAAA,CAAE,CAAG,EAAA,EAAE,CAAC,CAAA,CAAA;AAAA,KAE7C,MAAA,IAAA,KAAA,CAAM,QAAS,CAAA,GAAG,CAC3B,EAAA;AACI,MAAA,MAAM,MAAM,QAAS,CAAA,KAAA,CAAM,MAAM,CAAG,EAAA,CAAA,CAAE,GAAG,EAAE,CAAA,CAAA;AAE3C,MAAA,OAAO,IAAK,CAAA,KAAA;AAAA,QACR,eAAA,GAAmB,eAAkB,GAAA,GAAA,GAAO,GAAM,GAAA,GAAA;AAAA,OACtD,CAAA;AAAA,KACJ;AAEA,IAAA,OAAO,IAAK,CAAA,KAAA,CAAM,QAAS,CAAA,KAAA,EAAO,EAAE,CAAC,CAAA,CAAA;AAAA,GACzC;AAEA,EAAO,OAAA,CAAA,CAAA;AACX,CAAA;AAEO,SAAS,uBAAuB,MACvC,EAAA;AACI,EAAA,MAAM,YAA8B,GAAA;AAAA,IAChC,OAAO,MAAQ,EAAA,SAAA;AAAA,IACf,YAAY,MAAQ,EAAA,UAAA;AAAA,IACpB,YAAY,MAAQ,EAAA,UAAA;AAAA,IACpB,IAAA,EAAM,MAAQ,EAAA,IAAA,IAAQ,MAAQ,EAAA,KAAA;AAAA,IAE9B,YAAY,MAAQ,EAAA,UAAA;AAAA,IACpB,UAAU,MAAQ,EAAA,QAAA;AAAA,IAClB,WAAW,MAAQ,EAAA,SAAA;AAAA,IACnB,aAAa,MAAQ,EAAA,WAAA;AAAA,IACrB,YAAY,MAAQ,EAAA,UAAA;AAAA,IACpB,SAAS,MAAQ,EAAA,OAAA;AAAA,IACjB,cAAc,MAAQ,EAAA,YAAA;AAAA,IACtB,eAAe,MAAQ,EAAA,aAAA;AAAA,IACvB,YAAY,MAAQ,EAAA,UAAA;AAAA,IACpB,MAAM,MAAQ,EAAA,IAAA;AAAA;AAAA,IAEd,QAAQ,MAAQ,EAAA,MAAA;AAAA,IAChB,YAAY,MAAQ,EAAA,UAAA;AAAA,IACpB,UAAU,MAAQ,EAAA,QAAA;AAAA,IAClB,aAAA,EAAe,QAAQ,aAAiB,IAAA,GAAA;AAAA,GAC5C,CAAA;AAEA,EAAA,KAAA,MAAW,OAAO,YAClB,EAAA;AACI,IAAI,IAAA,YAAA,CAAa,GAAmC,CAAA,KAAM,KAC1D,CAAA,EAAA;AACI,MAAA,OAAO,aAAa,GAAmC,CAAA,CAAA;AAAA,KAC3D;AAAA,GACJ;AAEA,EAAO,OAAA,YAAA,CAAA;AACX,CAAA;AAMO,SAAS,cAAc,MAC9B,EAAA;AACI,EAAA,MAAM,aAAgB,GAAA,MAAA,CAAO,OAAQ,CAAA,QAAA,CAAS,IAAS,KAAA,CAAA,CAAA;AAEvD,EAAA,IAAI,aACJ,EAAA;AACI,IAAM,MAAA,UAAA,GAAa,OAAO,OAAQ,CAAA,QAAA,CAAS,SAAU,CAAA,IAAA,EAAO,CAAA,KAAA,CAAM,CAAC,CAAA,CAAA;AAEnE,IAAA,OAAO,UAAsB,YAAAA,YAAA,CAAA;AAAA,GACjC;AAEA,EAAO,OAAA,KAAA,CAAA;AACX;;;;;;"}